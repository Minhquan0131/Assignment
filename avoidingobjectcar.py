# -*- coding: utf-8 -*-
"""AvoidingObjectCar.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13rxfOj2NxI9gv8uc_SPPx05mrrue2uYP
"""



import numpy as np
import skfuzzy as fuzz
from skfuzzy import control as ctrl

# New Antecedent/Consequent objects hold universe variables and membership
# functions
sen1 = ctrl.Antecedent(np.arange(-30,30, 0.1), 'sen1')
sen2 = ctrl.Antecedent(np.arange(-25,25, 0.1), 'sen2')
sen3 = ctrl.Antecedent(np.arange(-25,25, 0.1), 'sen3')
motor1 = ctrl.Consequent(np.arange(-100, 100, 1), 'motor1')
motor2 = ctrl.Consequent(np.arange(-100, 100, 1), 'motor2')
sen1.automf(3)
sen2.automf(3)
sen3.automf(3)

motor1['low'] = fuzz.trimf(motor1.universe,[-15,-10,0])
motor1['medium'] = fuzz.trimf(motor1.universe, [0, 10, 15])
motor1['high'] = fuzz.trimf(motor1.universe, [15, 20, 25])

motor2['low'] = fuzz.trimf(motor2.universe, [10,10,10])
motor2['medium'] = fuzz.trimf(motor2.universe, [10,10,10])
motor2['high'] = fuzz.trimf(motor2.universe, [10,10,10])

rule1 = ctrl.Rule(sen1['poor'] | sen2['poor']|sen3['poor'], motor1['low'])
rule2 = ctrl.Rule(sen1['average']|sen2['average']&sen3['poor'], motor1['medium'])
rule3 = ctrl.Rule(sen1['good']|sen2['good'], motor1['high'])


rule1 = ctrl.Rule(sen1['poor'] | sen2['poor']|sen3['poor'], motor2['low'])
rule2 = ctrl.Rule(sen1['average']|sen2['average']&sen3['poor'], motor2['medium'])
rule3 = ctrl.Rule(sen1['good']|sen2['good'], motor2['high'])

Motor1_ctrl = ctrl.ControlSystem([rule1, rule2, rule3])
Force = ctrl.ControlSystemSimulation(Force_ctrl)
Force.input['phi'] = 10
Force.input['dphi'] = 44

# Crunch the numbers
Force.compute()

force.view(sim=Force)